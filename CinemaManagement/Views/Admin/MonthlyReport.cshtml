@{
    ViewData["Title"] = "Báo cáo theo tháng";
    var year = ViewBag.Year;
    var availableYears = ViewBag.AvailableYears as List<int> ?? new List<int>();
    var monthlyTickets = ViewBag.MonthlyTickets as List<dynamic> ?? new List<dynamic>();
    var totalTickets = ViewBag.TotalTickets;
    var totalRevenue = ViewBag.TotalRevenue;
    var topGenres = ViewBag.TopGenres as List<dynamic> ?? new List<dynamic>();
    
    // Tên tháng
    var monthNames = new[] { "", "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12" };
    
    // Chuẩn bị dữ liệu cho biểu đồ
    var months = monthlyTickets.Any() ? string.Join(",", monthlyTickets.Select(m => $"'{monthNames[m.Month]}'")) : "";
    var ticketCounts = monthlyTickets.Any() ? string.Join(",", monthlyTickets.Select(m => m.TicketCount)) : "";
    var revenues = monthlyTickets.Any() ? string.Join(",", monthlyTickets.Select(m => m.Revenue)) : "";
    
    // Dữ liệu cho biểu đồ thể loại
    var genreNames = topGenres.Any() ? string.Join(",", topGenres.Select(g => $"'{g.GenreName}'")) : "";
    var genreTickets = topGenres.Any() ? string.Join(",", topGenres.Select(g => g.TicketCount)) : "";
    var genreRevenues = topGenres.Any() ? string.Join(",", topGenres.Select(g => g.Revenue)) : "";
}

<div class="container py-4">
    <h2 class="mb-4">Báo cáo thống kê theo tháng</h2>

    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger">
            @ViewBag.ErrorMessage
        </div>
    }

    <div class="card mb-4">
        <div class="card-header">
            <h5>Chọn năm</h5>
        </div>
        <div class="card-body">
            <form method="get" id="yearForm" class="row g-3">
                <div class="col-md-4">
                    <select class="form-select" id="year" name="year" onchange="this.form.submit()">
                        @foreach (var y in availableYears)
                        {
                            if (y == year)
                            {
                                <option value="@y" selected>@y</option>
                            }
                            else
                            {
                                <option value="@y">@y</option>
                            }
                        }
                    </select>
                </div>
            </form>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card bg-primary text-white h-100">
                <div class="card-body">
                    <h5 class="card-title">Tổng số vé đã bán trong năm @year</h5>
                    <p class="display-4">@string.Format("{0:N0}", totalTickets)</p>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card bg-success text-white h-100">
                <div class="card-body">
                    <h5 class="card-title">Tổng doanh thu năm @year</h5>
                    <p class="display-4">@string.Format("{0:N0} VNĐ", totalRevenue)</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5>Biểu đồ doanh thu theo tháng năm @year</h5>
                </div>
                <div class="card-body">
                    <canvas id="monthlyChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-7">
            <div class="card">
                <div class="card-header">
                    <h5>Số liệu chi tiết theo tháng năm @year</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover" id="monthlyDataTable">
                            <thead>
                                <tr>
                                    <th>Tháng</th>
                                    <th>Số vé</th>
                                    <th>Doanh thu</th>
                                    <th>Suất chiếu</th>
                                    <th>Phim</th>
                                    <th>Khách hàng</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (monthlyTickets.Any())
                                {
                                    foreach (var month in monthlyTickets)
                                    {
                                        <tr>
                                            <td>@monthNames[month.Month]</td>
                                            <td>@month.TicketCount</td>
                                            <td>@string.Format("{0:N0} VNĐ", month.Revenue)</td>
                                            <td>@month.ShowtimeCount</td>
                                            <td>@month.MovieCount</td>
                                            <td>@month.CustomerCount</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" class="text-center">Không có dữ liệu</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-5">
            <div class="card">
                <div class="card-header">
                    <h5>Top thể loại phim năm @year</h5>
                </div>
                <div class="card-body">
                    <canvas id="genreChart"></canvas>
                    
                    @if (topGenres.Any())
                    {
                        <div class="mt-4">
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Thể loại</th>
                                            <th>Vé bán</th>
                                            <th>Doanh thu</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var genre in topGenres)
                                        {
                                            <tr>
                                                <td>@genre.GenreName</td>
                                                <td>@genre.TicketCount</td>
                                                <td>@string.Format("{0:N0} VNĐ", genre.Revenue)</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5>Phân tích xu hướng theo tháng</h5>
                </div>
                <div class="card-body">
                    @if (monthlyTickets.Any())
                    {
                        <div class="row">
                            <div class="col-md-6">
                                <h6>Tháng có doanh thu cao nhất</h6>
                                @{
                                    var maxRevenueMonth = monthlyTickets.OrderByDescending(m => m.Revenue).FirstOrDefault();
                                    if (maxRevenueMonth != null)
                                    {
                                        <div class="alert alert-success">
                                            <strong>@monthNames[maxRevenueMonth.Month]:</strong> @string.Format("{0:N0} VNĐ", maxRevenueMonth.Revenue)
                                            <br />
                                            <small>@maxRevenueMonth.TicketCount vé bán ra, @maxRevenueMonth.CustomerCount khách hàng</small>
                                        </div>
                                    }
                                }
                            </div>
                            <div class="col-md-6">
                                <h6>Tháng có lượng khách cao nhất</h6>
                                @{
                                    var maxCustomerMonth = monthlyTickets.OrderByDescending(m => m.CustomerCount).FirstOrDefault();
                                    if (maxCustomerMonth != null)
                                    {
                                        <div class="alert alert-info">
                                            <strong>@monthNames[maxCustomerMonth.Month]:</strong> @maxCustomerMonth.CustomerCount khách hàng
                                            <br />
                                            <small>@maxCustomerMonth.TicketCount vé bán ra, @string.Format("{0:N0} VNĐ", maxCustomerMonth.Revenue) doanh thu</small>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                        
                        <div class="row mt-3">
                            <div class="col-md-12">
                                <h6>So sánh quý</h6>
                                @{
                                    // Nhóm theo quý
                                    var quarterlyData = monthlyTickets.GroupBy(m => (m.Month - 1) / 3 + 1)
                                        .Select(g => new {
                                            Quarter = g.Key,
                                            TicketCount = g.Sum(m => m.TicketCount),
                                            Revenue = g.Sum(m => m.Revenue),
                                            CustomerCount = g.Sum(m => m.CustomerCount)
                                        })
                                        .OrderBy(q => q.Quarter)
                                        .ToList();
                                        
                                    // Tìm quý có doanh thu cao nhất
                                    var maxRevenueQuarter = quarterlyData.OrderByDescending(q => q.Revenue).FirstOrDefault();
                                }
                                
                                <div class="table-responsive">
                                    <table class="table table-bordered">
                                        <thead class="table-light">
                                            <tr>
                                                <th>Quý</th>
                                                <th>Số vé</th>
                                                <th>Doanh thu</th>
                                                <th>Khách hàng</th>
                                                <th>% Tổng doanh thu</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var quarter in quarterlyData)
                                            {
                                                var percentage = totalRevenue > 0 ? (quarter.Revenue * 100 / totalRevenue) : 0;
                                                var trClass = quarter.Quarter == maxRevenueQuarter?.Quarter ? "table-success" : "";
                                                
                                                <tr class="@trClass">
                                                    <td>Quý @quarter.Quarter</td>
                                                    <td>@quarter.TicketCount</td>
                                                    <td>@string.Format("{0:N0} VNĐ", quarter.Revenue)</td>
                                                    <td>@quarter.CustomerCount</td>
                                                    <td>@string.Format("{0:N2}%", percentage)</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <p class="text-center">Không có dữ liệu để phân tích</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(function() {
            // Khởi tạo bảng dữ liệu
            $('#monthlyDataTable').DataTable({
                order: [[0, 'asc']],
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.4/i18n/vi.json'
                }
            });
            
            // Chart for monthly data
            var monthlyCtx = document.getElementById('monthlyChart').getContext('2d');
            var monthlyChart = new Chart(monthlyCtx, {
                type: 'bar',
                data: {
                    labels: [@Html.Raw(months)],
                    datasets: [
                        {
                            label: 'Doanh thu (VNĐ)',
                            data: [@revenues],
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1,
                            yAxisID: 'y'
                        },
                        {
                            label: 'Số vé bán ra',
                            data: [@ticketCounts],
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1,
                            yAxisID: 'y1'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    interaction: {
                        mode: 'index',
                        intersect: false
                    },
                    scales: {
                        y: {
                            type: 'linear',
                            display: true,
                            position: 'left',
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Doanh thu (VNĐ)'
                            },
                            ticks: {
                                callback: function(value) {
                                    return new Intl.NumberFormat('vi-VN').format(value) + ' VNĐ';
                                }
                            }
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            beginAtZero: true,
                            grid: {
                                drawOnChartArea: false
                            },
                            title: {
                                display: true,
                                text: 'Số vé'
                            }
                        }
                    },
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.dataset.label || '';
                                    let value = context.raw || 0;
                                    if (label.includes('Doanh thu')) {
                                        return label + ': ' + new Intl.NumberFormat('vi-VN').format(value) + ' VNĐ';
                                    } else {
                                        return label + ': ' + value;
                                    }
                                }
                            }
                        }
                    }
                }
            });
            
            // Chart for genre data
            var genreCtx = document.getElementById('genreChart').getContext('2d');
            var genreChart = new Chart(genreCtx, {
                type: 'pie',
                data: {
                    labels: [@Html.Raw(genreNames)],
                    datasets: [{
                        label: 'Số vé bán ra',
                        data: [@genreTickets],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    let label = context.label || '';
                                    let value = context.raw || 0;
                                    let total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    let percentage = ((value / total) * 100).toFixed(2) + '%';
                                    return label + ': ' + value + ' vé (' + percentage + ')';
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>

}